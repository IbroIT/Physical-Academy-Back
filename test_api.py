#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
"""
import os
import django
import sys

# Setup Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "ac_back.settings")
django.setup()

from admission.models import QuotaType, QuotaStats, AdditionalSupport, ProcessStep
from admission.serializers import BachelorQuotasDataSerializer


def test_bachelor_quotas_api():
    """–¢–µ—Å—Ç API –¥–ª—è bachelor quotas"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    quotas = QuotaType.objects.filter(is_active=True)
    stats = QuotaStats.objects.filter(is_active=True)
    support = AdditionalSupport.objects.filter(is_active=True)
    steps = ProcessStep.objects.filter(is_active=True)

    print(f"‚úÖ –ö–≤–æ—Ç—ã: {quotas.count()}")
    print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats.count()}")
    print(f"‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: {support.count()}")
    print(f"‚úÖ –®–∞–≥–∏: {steps.count()}")

    if quotas.count() == 0:
        print("‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–≤–æ—Ç–∞—Ö –≤ –±–∞–∑–µ!")
        return False

    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —è–∑—ã–∫–∏...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é –∫–≤–æ—Ç—É
    quota = quotas.first()
    print(f"\n–ö–≤–æ—Ç–∞: {quota.type}")
    print(f"  RU: {quota.title_ru[:50]}...")
    print(f"  KG: {quota.title_kg[:50] if quota.title_kg else '(–ø—É—Å—Ç–æ)'}...")
    print(f"  EN: {quota.title_en[:50] if quota.title_en else '(–ø—É—Å—Ç–æ)'}...")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã get_*
    print("\nüîß –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ get_title:")
    print(f"  get_title('ru'): {quota.get_title('ru')[:50]}...")
    print(f"  get_title('kg'): {quota.get_title('kg')[:50]}...")
    print(f"  get_title('en'): {quota.get_title('en')[:50]}...")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
    print("\nüì¶ –¢–µ—Å—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å language=kg:")
    serializer = BachelorQuotasDataSerializer({}, context={"language": "kg"})
    data = serializer.data

    print(f"  –ö–≤–æ—Ç—ã –≤ –æ—Ç–≤–µ—Ç–µ: {len(data.get('quotas', []))}")
    print(f"  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ: {len(data.get('quota_stats', []))}")

    if data["quotas"]:
        first_quota = data["quotas"][0]
        print(f"\n  –ü–µ—Ä–≤–∞—è –∫–≤–æ—Ç–∞:")
        print(f"    title: {first_quota.get('title', '')[:50]}...")
        print(f"    description: {first_quota.get('description', '')[:50]}...")

        if first_quota.get("requirements"):
            print(f"    –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {len(first_quota['requirements'])}")
            if first_quota["requirements"]:
                print(
                    f"      –ü–µ—Ä–≤–æ–µ: {first_quota['requirements'][0].get('requirement', '')[:50]}..."
                )

    print("\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
    return True


if __name__ == "__main__":
    try:
        test_bachelor_quotas_api()
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()
        sys.exit(1)
