#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ get_* –≤ admission/models.py
–î–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è fallback –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
"""
import re


def fix_get_methods(filepath):
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –º–µ—Ç–æ–¥—ã get_* –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ fallback"""

    with open(filepath, "r", encoding="utf-8") as f:
        content = f.read()

    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –≤–∏–¥–∞:
    # return getattr(self, f"field_{language}", self.field_ru)
    pattern = r'return getattr\(self, f"(\w+)_\{language\}", self\.(\w+)\)'

    def replacement(match):
        field_name = match.group(1)
        fallback_field = match.group(2)
        return f'value = getattr(self, f"{field_name}_{{language}}", None)\n        return value if value else self.{fallback_field}'

    # –ó–∞–º–µ–Ω—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω
    new_content = re.sub(pattern, replacement, content)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open(filepath, "w", encoding="utf-8", newline="\n") as f:
        f.write(new_content)

    print(f"‚úÖ –§–∞–π–ª {filepath} —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ–Ω
    old_count = len(re.findall(pattern, content))
    print(f"üìä –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ—Ç–æ–¥–æ–≤: {old_count}")


if __name__ == "__main__":
    fix_get_methods("admission/models.py")
