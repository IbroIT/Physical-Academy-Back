from django.core.management.base import BaseCommand
from django.core.files.base import ContentFile
from admission.models import (
    QuotaType, QuotaRequirement, QuotaBenefit, 
    QuotaStats, AdditionalSupport, ProcessStep,
    MasterDocuments, MasterMainDate, MasterPrograms, MasterRequirements,
    AspirantMainDate, AspirantPrograms, AspirantRequirements, AspirantDocuments
)
import os


class Command(BaseCommand):
    help = '–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è admission'

    def handle(self, *args, **options):
        self.stdout.write('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è admission...')
        
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        self.clear_existing_data()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        self.create_quota_data()
        self.create_master_data()
        self.create_aspirant_data()
        
        self.stdout.write(
            self.style.SUCCESS('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')
        )

    def clear_existing_data(self):
        """–û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
        self.stdout.write('–û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...')
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
        models_to_clear = [
            QuotaType, QuotaStats, AdditionalSupport, ProcessStep,
            MasterDocuments, MasterMainDate, MasterPrograms, MasterRequirements,
            AspirantMainDate, AspirantPrograms, AspirantRequirements, AspirantDocuments
        ]
        
        for model in models_to_clear:
            model.objects.all().delete()

    def create_quota_data(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–≤–æ—Ç–∞–º"""
        self.stdout.write('–°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–≤–æ—Ç–∞–º...')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –∫–≤–æ—Ç
        self.create_quota_types()
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.create_quota_stats()
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
        self.create_additional_support()
        
        # –°–æ–∑–¥–∞–µ–º —à–∞–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
        self.create_process_steps()

    def create_master_data(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã"""
        self.stdout.write('–°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã...')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã
        self.create_master_programs()
        
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã
        self.create_master_requirements()
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞—Ç—ã –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã
        self.create_master_main_dates()
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã
        self.create_master_documents()

    def create_aspirant_data(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã"""
        self.stdout.write('–°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã...')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã
        self.create_aspirant_programs()
        
        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã
        self.create_aspirant_requirements()
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞—Ç—ã –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã
        self.create_aspirant_main_dates()
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã
        self.create_aspirant_documents()

    def create_quota_types(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–≤–æ—Ç —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏"""
        
        # –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∫–≤–æ—Ç–∞
        sports_quota = QuotaType.objects.create(
            type='sports',
            title_ru='–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∫–≤–æ—Ç–∞',
            title_ky='–°–ø–æ—Ä—Ç—Ç—É–∫ –∫–≤–æ—Ç–∞',
            title_en='Sports Quota',
            description_ru='–î–ª—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ —Å –≤—ã–¥–∞—é—â–∏–º–∏—Å—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏',
            description_ky='–ú—ã–∫—Ç—ã –∂–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä–∏ –±–∞—Ä —Å–ø–æ—Ä—Ç—á—É–ª–∞—Ä “Ø—á“Ø–Ω',
            description_en='For athletes with outstanding achievements',
            icon='üèÜ',
            spots=15,
            deadline='20 –∞–≤–≥—É—Å—Ç–∞',
            color='blue',
            order=1
        )
        
        # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∫–≤–æ—Ç—ã
        sports_requirements = [
            {
                'ru': '–î–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ –∂–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä–¥–∏ —ã—Ä–∞—Å—Ç–∞–≥–∞–Ω –¥–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä',
                'en': 'Documents confirming sports achievements'
            },
            {
                'ru': '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏',
                'ky': '–°–ø–æ—Ä—Ç —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è—Å—ã–Ω–∞–Ω —Å—É–Ω—É—à',
                'en': 'Recommendation from sports federation'
            },
            {
                'ru': '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –æ –¥–æ–ø—É—Å–∫–µ –∫ –∑–∞–Ω—è—Ç–∏—è–º',
                'ky': '–ú–∞—à—ã–≥—É—É–ª–∞—Ä–≥–∞ —É—Ä—É–∫—Å–∞—Ç –±–µ—Ä“Ø“Ø —Ç—É—É—Ä–∞–ª—É—É –º–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ —Å–ø—Ä–∞–≤–∫–∞',
                'en': 'Medical certificate for training admission'
            },
            {
                'ru': '–ê—Ç—Ç–µ—Å—Ç–∞—Ç –æ —Å—Ä–µ–¥–Ω–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏',
                'ky': '–û—Ä—Ç–æ –±–∏–ª–∏–º —Ç—É—É—Ä–∞–ª—É—É –∞—Ç—Ç–µ—Å—Ç–∞—Ç',
                'en': 'Secondary education certificate'
            }
        ]
        
        for idx, req in enumerate(sports_requirements):
            QuotaRequirement.objects.create(
                quota_type=sports_quota,
                requirement_ru=req['ru'],
                requirement_ky=req['ky'],
                requirement_en=req['en'],
                order=idx + 1
            )
        
        # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∫–≤–æ—Ç—ã
        sports_benefits = [
            {
                'ru': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —É—á–µ–±–Ω—ã–π –ø–ª–∞–Ω',
                'ky': '–ñ–µ–∫–µ –æ–∫—É—É –ø–ª–∞–Ω—ã',
                'en': 'Individual study plan'
            },
            {
                'ru': '–°–æ–≤–º–µ—â–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —É—á–µ–±—ã',
                'ky': '–ú–∞—à—ã–≥—É—É–ª–∞—Ä –º–µ–Ω–µ–Ω –æ–∫—É—É–Ω—É –∞–π–∫–∞–ª—ã—à—Ç—ã—Ä—É—É',
                'en': 'Combining training and studies'
            },
            {
                'ru': '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'en': 'Sports scholarship'
            },
            {
                'ru': '–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º –æ–±—â–µ–∂–∏—Ç–∏–∏',
                'ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ –∂–∞—Ç–∞–∫–∞–Ω–∞–¥–∞ –∂–∞—à–æ–æ',
                'en': 'Accommodation in sports dormitory'
            }
        ]
        
        for idx, benefit in enumerate(sports_benefits):
            QuotaBenefit.objects.create(
                quota_type=sports_quota,
                benefit_ru=benefit['ru'],
                benefit_ky=benefit['ky'],
                benefit_en=benefit['en'],
                order=idx + 1
            )
        
        # –ö–≤–æ—Ç–∞ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è
        health_quota = QuotaType.objects.create(
            type='health',
            title_ru='–ö–≤–æ—Ç–∞ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è',
            title_ky='–î–µ–Ω —Å–æ–æ–ª—É–∫ –∞–±–∞–ª—ã –±–æ—é–Ω—á–∞ –∫–≤–æ—Ç–∞',
            title_en='Health Status Quota',
            description_ru='–î–ª—è –ª–∏—Ü —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –∑–¥–æ—Ä–æ–≤—å—è',
            description_ky='–î–µ–Ω —Å–æ–æ–ª—É–∫ –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–∫—Ç”©—Ä“Ø —á–µ–∫—Ç–µ–ª–≥–µ–Ω –∞–¥–∞–º–¥–∞—Ä “Ø—á“Ø–Ω',
            description_en='For people with limited health opportunities',
            icon='‚ù§Ô∏è',
            spots=10,
            deadline='25 –∞–≤–≥—É—Å—Ç–∞',
            color='green',
            order=2
        )
        
        # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–≤–æ—Ç—ã –ø–æ –∑–¥–æ—Ä–æ–≤—å—é
        health_requirements = [
            {
                'ru': '–ú–µ–¥–∏–∫–æ-—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞',
                'ky': '–ú–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫-—Å–æ—Ü–∏–∞–ª–¥—ã–∫ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞',
                'en': 'Medical-social examination'
            },
            {
                'ru': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏',
                'ky': '–ñ–µ–∫–µ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∞—Å—ã',
                'en': 'Individual rehabilitation program'
            },
            {
                'ru': '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ –≤—Ä–∞—á–µ–±–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –∞–∫–∞–¥–µ–º–∏–∏',
                'ky': '–ê–∫–∞–¥–µ–º–∏—è–Ω—ã–Ω –¥–∞—Ä—ã–≥–µ—Ä –∫–æ–º–∏—Å—Å–∏—è—Å—ã–Ω—ã–Ω –∫–æ—Ä—É—Ç—É–Ω–¥—É—Å—É',
                'en': 'Conclusion of academy medical commission'
            }
        ]
        
        for idx, req in enumerate(health_requirements):
            QuotaRequirement.objects.create(
                quota_type=health_quota,
                requirement_ru=req['ru'],
                requirement_ky=req['ky'],
                requirement_en=req['en'],
                order=idx + 1
            )
        
        # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –∫–≤–æ—Ç—ã –ø–æ –∑–¥–æ—Ä–æ–≤—å—é
        health_benefits = [
            {
                'ru': '–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è',
                'ky': '–ê–¥–∞–ø—Ç–∞—Ü–∏—è–ª–∞–Ω–≥–∞–Ω –æ–∫—É—É –ø—Ä–æ–≥—Ä–∞–º–º–∞—Å—ã',
                'en': 'Adapted learning program'
            },
            {
                'ru': '–î–æ—Å—Ç—É–ø–Ω–∞—è —Å—Ä–µ–¥–∞',
                'ky': '–ñ–µ—Ç–∫–∏–ª–∏–∫—Ç“Ø“Ø —á”©–π—Ä”©',
                'en': 'Accessible environment'
            },
            {
                'ru': '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—å—é—Ç–æ—Ä',
                'ky': '–ñ–µ–∫–µ —Ç—å—é—Ç–æ—Ä',
                'en': 'Personal tutor'
            },
            {
                'ru': '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                'ky': '–°–æ—Ü–∏–∞–ª–¥—ã–∫ –∫–æ–ª–¥–æ–æ',
                'en': 'Social support'
            }
        ]
        
        for idx, benefit in enumerate(health_benefits):
            QuotaBenefit.objects.create(
                quota_type=health_quota,
                benefit_ru=benefit['ru'],
                benefit_ky=benefit['ky'],
                benefit_en=benefit['en'],
                order=idx + 1
            )
        
        # –¶–µ–ª–µ–≤–∞—è –∫–≤–æ—Ç–∞
        target_quota = QuotaType.objects.create(
            type='target',
            title_ru='–¶–µ–ª–µ–≤–∞—è –∫–≤–æ—Ç–∞',
            title_ky='–ú–∞–∫—Å–∞—Ç—Ç—É—É –∫–≤–æ—Ç–∞',
            title_en='Target Quota',
            description_ru='–î–ª—è –±—É–¥—É—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π',
            description_ky='–°–ø–æ—Ä—Ç—Ç—É–∫ —É—é–º–¥–∞—Ä–¥—ã–Ω –∫–µ–ª–µ—á–µ–∫—Ç–µ–≥–∏ –∫—ã–∑–º–∞—Ç–∫–µ—Ä–ª–µ—Ä–∏ “Ø—á“Ø–Ω',
            description_en='For future employees of sports organizations',
            icon='üéØ',
            spots=20,
            deadline='15 –∞–≤–≥—É—Å—Ç–∞',
            color='cyan',
            order=3
        )
        
        # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –∫–≤–æ—Ç—ã
        target_requirements = [
            {
                'ru': '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                'ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ —É—é–º–¥–∞–Ω –±–∞–≥—ã—Ç',
                'en': 'Referral from sports organization'
            },
            {
                'ru': '–¢—Ä–µ—Ö—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –¥–æ–≥–æ–≤–æ—Ä',
                'ky': '“Æ—á —Ç–∞—Ä–∞–ø—Ç—É—É –∫–µ–ª–∏—à–∏–º',
                'en': 'Tripartite agreement'
            },
            {
                'ru': '–û–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å 3 –≥–æ–¥–∞',
                'ky': '3 –∂—ã–ª –∏—à—Ç”©”© –º–∏–ª–¥–µ—Ç—Ç–µ–Ω–º–µ—Å–∏',
                'en': 'Commitment to work for 3 years'
            }
        ]
        
        for idx, req in enumerate(target_requirements):
            QuotaRequirement.objects.create(
                quota_type=target_quota,
                requirement_ru=req['ru'],
                requirement_ky=req['ky'],
                requirement_en=req['en'],
                order=idx + 1
            )
        
        # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –∫–≤–æ—Ç—ã
        target_benefits = [
            {
                'ru': '–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
                'ky': '–ö–µ–ø–∏–ª–¥–∏–∫ –±–µ—Ä–∏–ª–≥–µ–Ω –∂—É–º—É—à –æ—Ä–¥—É',
                'en': 'Guaranteed employment'
            },
            {
                'ru': '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö',
                'ky': '–ü—Ä–æ—Ñ–∏–ª–¥–∏–∫ —É—é–º–¥–∞—Ä–¥–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞',
                'en': 'Internship in specialized organizations'
            },
            {
                'ru': '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'ky': '–ö–æ—à—É–º—á–∞ —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'en': 'Additional scholarship'
            }
        ]
        
        for idx, benefit in enumerate(target_benefits):
            QuotaBenefit.objects.create(
                quota_type=target_quota,
                benefit_ru=benefit['ru'],
                benefit_ky=benefit['ky'],
                benefit_en=benefit['en'],
                order=idx + 1
            )

    def create_quota_stats(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
        stats_data = [
            {
                'stat_type': 'total_spots',
                'number': '45',
                'label_ru': '–≤—Å–µ–≥–æ –º–µ—Å—Ç –ø–æ –∫–≤–æ—Ç–∞–º',
                'label_ky': '–∫–≤–æ—Ç–∞–ª–∞—Ä –±–æ—é–Ω—á–∞ –∂–∞–ª–ø—ã –æ—Ä—É–Ω–¥–∞—Ä',
                'label_en': 'total quota spots',
                'description_ru': '–ï–∂–µ–≥–æ–¥–Ω–æ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è',
                'description_ky': '–ñ—ã–ª —Å–∞–π—ã–Ω –±”©–ª“Ø–Ω”©—Ç',
                'description_en': 'Allocated annually',
                'order': 1
            },
            {
                'stat_type': 'success_rate',
                'number': '98%',
                'label_ru': '—É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è',
                'label_ky': '–∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø –∫–∞–±—ã–ª –∞–ª—É—É',
                'label_en': 'successful admission',
                'description_ru': '–ü—Ä–æ—Ö–æ–¥—è—Ç –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–π –æ—Ç–±–æ—Ä',
                'description_ky': '–ö–æ–Ω–∫—É—Ä—Å—Ç—É–∫ —Ç–∞–Ω–¥–æ–æ–¥–æ–Ω ”©—Ç“Ø—à”©—Ç',
                'description_en': 'Pass competitive selection',
                'order': 2
            },
            {
                'stat_type': 'organizations',
                'number': '25+',
                'label_ru': '—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π',
                'label_ky': '—Å–ø–æ—Ä—Ç—Ç—É–∫ —É—é–º–¥–∞—Ä',
                'label_en': 'sports organizations',
                'description_ru': '–£—á–∞—Å—Ç–≤—É—é—Ç –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ',
                'description_ky': '–ü—Ä–æ–≥—Ä–∞–º–º–∞–≥–∞ –∫–∞—Ç—ã—à—ã—à–∞—Ç',
                'description_en': 'Participate in the program',
                'order': 3
            },
            {
                'stat_type': 'quota_types',
                'number': '3',
                'label_ru': '–≤–∏–¥–∞ –∫–≤–æ—Ç',
                'label_ky': '–∫–≤–æ—Ç–∞ —Ç“Ø—Ä“Ø',
                'label_en': 'types of quotas',
                'description_ru': '–î–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤',
                'description_ky': '–¢“Ø—Ä–¥“Ø“Ø –∫–∞—Ç–µ–≥–æ—Ä–∏—è–¥–∞–≥—ã –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç—Ç–µ—Ä “Ø—á“Ø–Ω',
                'description_en': 'For different categories of applicants',
                'order': 4
            }
        ]
        
        for stat in stats_data:
            QuotaStats.objects.create(**stat)

    def create_additional_support(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        support_data = [
            {
                'support_ru': '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫',
                'support_ky': '–ñ–µ–∫–µ —Å–ø–æ—Ä—Ç—Ç—É–∫ –Ω–∞—Å–∞–∞—Ç—á—ã',
                'support_en': 'Personal sports mentor',
                'order': 1
            },
            {
                'support_ru': '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å',
                'support_ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –∂–∞–Ω–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å',
                'support_en': 'Sports equipment and inventory',
                'order': 2
            },
            {
                'support_ru': '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ',
                'support_ky': '–ê–¥–∏—Å—Ç–µ—à—Ç–∏—Ä–∏–ª–≥–µ–Ω —Ç–∞–º–∞–∫-–∞—à',
                'support_en': 'Specialized nutrition',
                'order': 3
            },
            {
                'support_ru': '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ',
                'support_ky': '–ú–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ –∫–æ—à—Ç–æ–æ –∂–∞–Ω–∞ –∫–∞–ª—ã–±—ã–Ω–∞ –∫–µ–ª—Ç–∏—Ä“Ø“Ø',
                'support_en': 'Medical support and recovery',
                'order': 4
            }
        ]
        
        for support in support_data:
            AdditionalSupport.objects.create(**support)

    def create_process_steps(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
        steps_data = [
            {
                'step_number': 1,
                'title_ru': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
                'title_ky': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
                'title_en': 'Consultation',
                'description_ru': '–ü–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–≤–æ—Ç—É',
                'description_ky': '–ö–∞–±—ã–ª –∞–ª—É—É –∫–æ–º–∏—Å—Å–∏—è—Å—ã–Ω–∞–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∞–ª—ã–ø, —ã–ª–∞–π—ã–∫—Ç—É—É –∫–≤–æ—Ç–∞–Ω—ã –∞–Ω—ã–∫—Ç–∞“£—ã–∑',
                'description_en': 'Get consultation from admission committee and determine suitable quota',
                'color_scheme': 'from-blue-500 to-cyan-500'
            },
            {
                'step_number': 2,
                'title_ru': '–î–æ–∫—É–º–µ–Ω—Ç—ã',
                'title_ky': '–î–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä',
                'title_en': 'Documents',
                'description_ru': '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'description_ky': '–ö–µ—Ä–µ–∫—Ç“Ø“Ø –¥–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä–¥–∏–Ω —Ç–æ–ø—Ç–æ–º—É–Ω –∂–∞–Ω–∞ —Å–ø–æ—Ä—Ç—Ç—É–∫ –∂–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä–¥–∏ –¥–∞—è—Ä–¥–∞“£—ã–∑',
                'description_en': 'Prepare necessary document package and sports achievements',
                'color_scheme': 'from-green-500 to-emerald-500'
            },
            {
                'step_number': 3,
                'title_ru': '–ü–æ–¥–∞—á–∞',
                'title_ky': '–¢–∞–ø—à—ã—Ä—É—É',
                'title_en': 'Submission',
                'description_ru': '–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è',
                'description_ky': '–ê—Ä—ã–∑ –±–µ—Ä–∏–ø, –∫–æ—à—É–º—á–∞ —Å—ã–Ω–æ–æ–ª–æ—Ä–¥–æ–Ω ”©—Ç“Ø“£“Ø–∑',
                'description_en': 'Submit application and pass additional tests',
                'color_scheme': 'from-purple-500 to-pink-500'
            }
        ]
        
        for step in steps_data:
            ProcessStep.objects.create(**step)

    def create_master_programs(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã"""
        programs_data = [
            {
                'program_name_ru': '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞',
                'program_name_ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞',
                'program_name_en': 'Sports Pedagogy',
                'description_ru': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≥–æ—Ç–æ–≤–∏—Ç –≤—ã—Å–æ–∫–æ–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥–∏–∫–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã.',
                'description_ky': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–ø–æ—Ä—Ç—Ç—É–∫ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞ –∂–∞–Ω–∞ –¥–µ–Ω–µ —Ç–∞—Ä–±–∏—è —Å–∞–±–∞–≥—ã–Ω ”©—Ç–∫”©—Ä“Ø“Ø –º–µ—Ç–æ–¥–∏–∫–∞—Å—ã —Ç–∞—Ä–º–∞–≥—ã–Ω–¥–∞ –∂–æ–≥–æ—Ä–∫—É –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è–ª—É—É –∞–¥–∏—Å—Ç–µ—Ä–¥–∏ –¥–∞—è—Ä–¥–∞–π—Ç.',
                'description_en': 'The program prepares highly qualified specialists in the field of sports pedagogy and physical education teaching methodology.',
                'features_ru': [
                    '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è',
                    '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —à–∫–æ–ª–∞—Ö',
                    '–ù–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞',
                    '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –≤–µ–¥—É—â–∏—Ö —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–∞—Ö'
                ],
                'features_ky': [
                    '–ò–Ω–Ω–æ–≤–∞—Ü–∏—è–ª—ã–∫ –æ–∫—É—Ç—É—É –º–µ—Ç–æ–¥–∏–∫–∞–ª–∞—Ä—ã',
                    '–°–ø–æ—Ä—Ç –º–µ–∫—Ç–µ–ø—Ç–µ—Ä–∏–Ω–¥–µ –ø—Ä–∞–∫—Ç–∏–∫–∞–ª—ã–∫ —Å–∞–±–∞–∫—Ç–∞—Ä',
                    '–ò–ª–∏–º–∏–π-–∏–∑–∏–ª–¥”©”© –∏—à—Ç–µ—Ä–∏',
                    '–ê–ª–¥—ã“£–∫—ã —Å–ø–æ—Ä—Ç –±–æ—Ä–±–æ—Ä–ª–æ—Ä—É–Ω–¥–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞–ª–∞—Ä'
                ],
                'features_en': [
                    'Innovative teaching methods',
                    'Practical classes in sports schools',
                    'Research work',
                    'Internships in leading sports centers'
                ],
                'order': 1
            },
            {
                'program_name_ru': '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç',
                'program_name_ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç',
                'program_name_en': 'Sports Management',
                'description_ru': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏—Ö –∫–∞–¥—Ä–æ–≤ –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏.',
                'description_ky': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–ø–æ—Ä—Ç –∏–Ω–¥—É—Å—Ç—Ä–∏—è—Å—ã “Ø—á“Ø–Ω –±–∞—à–∫–∞—Ä—É—É –∫–∞–¥—Ä–ª–∞—Ä—ã–Ω –¥–∞—è—Ä–¥–æ–æ–≥–æ –±–∞–≥—ã—Ç—Ç–∞–ª–≥–∞–Ω.',
                'description_en': 'The program is aimed at training management personnel for the sports industry.',
                'features_ru': [
                    '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏',
                    '–≠–∫–æ–Ω–æ–º–∏–∫–∞ —Å–ø–æ—Ä—Ç–∞',
                    '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤ —Å–ø–æ—Ä—Ç–µ',
                    '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –±–∏–∑–Ω–µ—Å'
                ],
                'features_ky': [
                    '–°–ø–æ—Ä—Ç —É—é–º–¥–∞—Ä—ã–Ω –±–∞—à–∫–∞—Ä—É—É',
                    '–°–ø–æ—Ä—Ç—Ç—É–Ω —ç–∫–æ–Ω–æ–º–∏–∫–∞—Å—ã',
                    '–°–ø–æ—Ä—Ç—Ç–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥',
                    '–≠–ª –∞—Ä–∞–ª—ã–∫ —Å–ø–æ—Ä—Ç –±–∏–∑–Ω–µ—Å–∏'
                ],
                'features_en': [
                    'Sports organization management',
                    'Sports economics',
                    'Sports marketing',
                    'International sports business'
                ],
                'order': 2
            },
            {
                'program_name_ru': '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞',
                'program_name_ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ –º–µ–¥–∏—Ü–∏–Ω–∞',
                'program_name_en': 'Sports Medicine',
                'description_ru': '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º—É –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—é —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.',
                'description_ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ –∏—à–º–µ—Ä–¥“Ø“Ø–ª“Ø–∫—Ç“Ø –º–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ –∫–∞–º—Å—ã–∑–¥–æ–æ –±–æ—é–Ω—á–∞ –∞–¥–∏—Å—Ç–µ—Ä–¥–∏ –¥–∞—è—Ä–¥–æ–æ.',
                'description_en': 'Training specialists in medical support of sports activities.',
                'features_ru': [
                    '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ç—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥–∏—è',
                    '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞',
                    '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è',
                    '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞'
                ],
                'features_ky': [
                    '–°–ø–æ—Ä—Ç—Ç—É–∫ —Ç—Ä–∞–≤–º–∞—Ç–æ–ª–æ–≥–∏—è',
                    '–ö–∞–ª—ã–±—ã–Ω–∞ –∫–µ–ª—Ç–∏—Ä“Ø“Ø—á“Ø –º–µ–¥–∏—Ü–∏–Ω–∞',
                    '–°–ø–æ—Ä—Ç—Ç—É–∫ —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è',
                    '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–¥—ã–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞'
                ],
                'features_en': [
                    'Sports traumatology',
                    'Rehabilitation medicine',
                    'Sports pharmacology',
                    'Functional diagnostics'
                ],
                'order': 3
            }
        ]
        
        for program in programs_data:
            MasterPrograms.objects.create(**program)

    def create_master_requirements(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã"""
        requirements_data = [
            {
                'title_ru': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
                'title_ky': '–ë–∏–ª–∏–º –±–µ—Ä“Ø“Ø',
                'title_en': 'Education',
                'description_ru': '–î–∏–ø–ª–æ–º –æ –≤—ã—Å—à–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –¥–∏–ø–ª–æ–º –æ –≤—ã—Å—à–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –ø–æ –ª—é–±–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã –∏ —Å–ø–æ—Ä—Ç–∞.',
                'description_ky': '–ü—Ä–æ—Ñ–∏–ª–¥–∏–∫ –∞–¥–∏—Å—Ç–∏–∫ –±–æ—é–Ω—á–∞ –∂–æ–≥–æ—Ä–∫—É –±–∏–ª–∏–º —Ç—É—É—Ä–∞–ª—É—É –¥–∏–ø–ª–æ–º –∂–µ –∫–∞–Ω–¥–∞–π –±–æ–ª–±–æ—Å—É–Ω –∞–¥–∏—Å—Ç–∏–∫ –±–æ—é–Ω—á–∞ –∂–æ–≥–æ—Ä–∫—É –±–∏–ª–∏–º —Ç—É—É—Ä–∞–ª—É—É –¥–∏–ø–ª–æ–º –¥–µ–Ω–µ —Ç–∞—Ä–±–∏—è –∂–∞–Ω–∞ —Å–ø–æ—Ä—Ç —Ç–∞—Ä–º–∞–≥—ã–Ω–¥–∞ –∫–æ—à—É–º—á–∞ –±–∏–ª–∏–º –±–µ—Ä“Ø“Ø –º–µ–Ω–µ–Ω.',
                'description_en': 'Higher education diploma in a relevant specialty or higher education diploma in any specialty with additional education in physical culture and sports.',
                'order': 1
            },
            {
                'title_ru': '–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã',
                'title_ky': '–ö–∏—Ä“Ø“Ø —ç–∫–∑–∞–º–µ–Ω–¥–µ—Ä–∏',
                'title_en': 'Entrance exams',
                'description_ru': '–°–¥–∞—á–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—é—â–µ–≥–æ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫—É—é —á–∞—Å—Ç—å –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è.',
                'description_ky': '–¢–µ–æ—Ä–∏—è–ª—ã–∫ –±”©–ª“Ø–∫—Ç“Ø –∂–∞–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞–ª—ã–∫ —Ç–∞–ø—à—ã—Ä–º–∞–ª–∞—Ä–¥—ã –∫–∞–º—Ç—ã–≥–∞–Ω –∞–¥–∏—Å—Ç–∏–∫ –±–æ—é–Ω—á–∞ –∫–æ–º–ø–ª–µ–∫—Å—Ç“Ø“Ø —ç–∫–∑–∞–º–µ–Ω–¥–∏ —Ç–∞–ø—à—ã—Ä—É—É.',
                'description_en': 'Passing a comprehensive specialty exam that includes theoretical part and practical tasks.',
                'order': 2
            },
            {
                'title_ru': '–î–æ–∫—É–º–µ–Ω—Ç—ã',
                'title_ky': '–î–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä',
                'title_en': 'Documents',
                'description_ru': '–ó–∞—è–≤–ª–µ–Ω–∏–µ, –¥–∏–ø–ª–æ–º –æ –≤—ã—Å—à–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏, —Å–ø—Ä–∞–≤–∫–∞ —Å –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ —É—á–µ–±—ã, –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.',
                'description_ky': '–ê—Ä—ã–∑, –∂–æ–≥–æ—Ä–∫—É –±–∏–ª–∏–º —Ç—É—É—Ä–∞–ª—É—É –¥–∏–ø–ª–æ–º, –∂—É–º—É—à –∂–µ –æ–∫—É—É –∂–µ—Ä–∏–Ω–µ–Ω —Å–ø—Ä–∞–≤–∫–∞, –º–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ —Å–ø—Ä–∞–≤–∫–∞, —Å“Ø—Ä”©—Ç—Ç”©—Ä.',
                'description_en': 'Application, higher education diploma, certificate from place of work or study, medical certificate, photographs.',
                'order': 3
            }
        ]
        
        for requirement in requirements_data:
            MasterRequirements.objects.create(**requirement)

    def create_master_main_dates(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞—Ç –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã"""
        dates_data = [
            {
                'event_name_ru': '–ü—Ä–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                'event_name_ky': '–î–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä–¥–∏ –∫–∞–±—ã–ª –∞–ª—É—É',
                'event_name_en': 'Document submission',
                'date': '1 –∏—é–Ω—è - 15 –∏—é–ª—è',
                'order': 1
            },
            {
                'event_name_ru': '–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã',
                'event_name_ky': '–ö–∏—Ä“Ø“Ø —ç–∫–∑–∞–º–µ–Ω–¥–µ—Ä–∏',
                'event_name_en': 'Entrance exams',
                'date': '20 –∏—é–ª—è - 5 –∞–≤–≥—É—Å—Ç–∞',
                'order': 2
            },
            {
                'event_name_ru': '–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ',
                'event_name_ky': '–ö–∞–±—ã–ª –∞–ª—É—É',
                'event_name_en': 'Enrollment',
                'date': '10 –∞–≤–≥—É—Å—Ç–∞',
                'order': 3
            },
            {
                'event_name_ru': '–ù–∞—á–∞–ª–æ —É—á–µ–±–Ω–æ–≥–æ –≥–æ–¥–∞',
                'event_name_ky': '–û–∫—É—É –∂—ã–ª—ã–Ω—ã–Ω –±–∞—à—Ç–∞–ª—ã—à—ã',
                'event_name_en': 'Start of academic year',
                'date': '1 —Å–µ–Ω—Ç—è–±—Ä—è',
                'order': 4
            }
        ]
        
        for date_item in dates_data:
            MasterMainDate.objects.create(**date_item)

    def create_master_documents(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã"""
        documents_data = [
            {
                'document_name_ru': '–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–µ–º–∞ –≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É',
                'document_name_ky': '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞–≥–∞ –∫–∞–±—ã–ª –∞–ª—É—É —ç—Ä–µ–∂–µ–ª–µ—Ä–∏',
                'document_name_en': 'Master\'s admission rules',
                'order': 1
            },
            {
                'document_name_ru': '–ü—Ä–æ–≥—Ä–∞–º–º—ã –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤',
                'document_name_ky': '–ö–∏—Ä“Ø“Ø —ç–∫–∑–∞–º–µ–Ω–¥–µ—Ä–∏–Ω–∏–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∞–ª–∞—Ä—ã',
                'document_name_en': 'Entrance exam programs',
                'order': 2
            },
            {
                'document_name_ru': '–°–ø–∏—Å–æ–∫ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏',
                'document_name_ky': '–î–∞—è—Ä–¥–æ–æ –±–∞–≥—ã—Ç—Ç–∞—Ä—ã–Ω—ã–Ω —Ç–∏–∑–º–µ—Å–∏',
                'document_name_en': 'List of training directions',
                'order': 3
            },
            {
                'document_name_ru': '–û–±—Ä–∞–∑–µ—Ü –∑–∞—è–≤–ª–µ–Ω–∏—è',
                'document_name_ky': '–ê—Ä—ã–∑–¥—ã–Ω “Ø–ª–≥“Ø—Å“Ø',
                'document_name_en': 'Application form',
                'order': 4
            }
        ]
        
        for doc in documents_data:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
            content = f"–î–æ–∫—É–º–µ–Ω—Ç: {doc['document_name_ru']}\n–≠—Ç–æ –æ–±—Ä–∞–∑–µ—Ü –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã."
            file_content = ContentFile(content.encode('utf-8'))
            file_name = f"master_doc_{doc['order']}.txt"
            
            master_doc = MasterDocuments.objects.create(
                document_name_ru=doc['document_name_ru'],
                document_name_ky=doc['document_name_ky'],
                document_name_en=doc['document_name_en'],
                order=doc['order']
            )
            master_doc.file.save(file_name, file_content, save=True)

    def create_aspirant_programs(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã"""
        programs_data = [
            {
                'program_name_ru': '–¢–µ–æ—Ä–∏—è –∏ –º–µ—Ç–æ–¥–∏–∫–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è, —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, –æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω–æ–π –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã',
                'program_name_ky': '–î–µ–Ω–µ —Ç–∞—Ä–±–∏—è—Å—ã–Ω—ã–Ω —Ç–µ–æ—Ä–∏—è—Å—ã –∂–∞–Ω–∞ –º–µ—Ç–æ–¥–∏–∫–∞—Å—ã, —Å–ø–æ—Ä—Ç—Ç—É–∫ –º–∞—à—ã–≥—É—É–ª–∞—Ä, —Å–æ–æ–ª—É–∫—Ç—É —á—ã“£–¥–æ–æ—á—É –∂–∞–Ω–∞ –∞–¥–∞–ø—Ç–∏–≤–¥–∏–∫ –¥–µ–Ω–µ —Ç–∞—Ä–±–∏—è',
                'program_name_en': 'Theory and methodology of physical education, sports training, health and adaptive physical culture',
                'description_ru': '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –Ω–∞—É—á–Ω—ã—Ö –∫–∞–¥—Ä–æ–≤ –≤—ã—Å—à–µ–π –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —Ç–µ–æ—Ä–∏–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è –∏ —Å–ø–æ—Ä—Ç–∞.',
                'description_ky': '–î–µ–Ω–µ —Ç–∞—Ä–±–∏—è –∂–∞–Ω–∞ —Å–ø–æ—Ä—Ç—Ç—É–Ω —Ç–µ–æ—Ä–∏—è—Å—ã –º–µ–Ω–µ–Ω –º–µ—Ç–æ–¥–∏–∫–∞—Å—ã —Ç–∞—Ä–º–∞–≥—ã–Ω–¥–∞ –∂–æ–≥–æ—Ä–∫—É –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è–ª—É—É –∏–ª–∏–º–∏–π –∫–∞–¥—Ä–ª–∞—Ä–¥—ã –¥–∞—è—Ä–¥–æ–æ.',
                'description_en': 'Training highly qualified scientific personnel in the field of theory and methodology of physical education and sports.',
                'features_ru': [
                    '–ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–ø–æ—Ä—Ç–∞',
                    '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
                    '–ú–µ–∂–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
                    '–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –∂—É—Ä–Ω–∞–ª–∞—Ö'
                ],
                'features_ky': [
                    '–°–ø–æ—Ä—Ç —Ç–∞—Ä–º–∞–≥—ã–Ω–¥–∞ –∏–ª–∏–º–∏–π –∏–∑–∏–ª–¥”©”©–ª”©—Ä',
                    '–ò–Ω–Ω–æ–≤–∞—Ü–∏—è–ª—ã–∫ –º–∞—à—ã–≥—É—É –º–µ—Ç–æ–¥–∏–∫–∞–ª–∞—Ä—ã',
                    '–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–ª–∞—Ä –∞—Ä–∞–ª—ã–∫ –º–∞–º–∏–ª–µ',
                    '–≠–ª –∞—Ä–∞–ª—ã–∫ –∂—É—Ä–Ω–∞–ª–¥–∞—Ä–¥–∞ –±–∞—Å—ã–ª–º–∞–ª–∞—Ä'
                ],
                'features_en': [
                    'Scientific research in sports',
                    'Innovative training methods',
                    'Interdisciplinary approach',
                    'Publications in international journals'
                ],
                'order': 1
            },
            {
                'program_name_ru': '–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏',
                'program_name_ky': '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞–ª—ã–∫ –∏–ª–∏–º–¥–µ—Ä',
                'program_name_en': 'Pedagogical Sciences',
                'description_ru': '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.',
                'description_ky': '–î–µ–Ω–µ —Ç–∞—Ä–±–∏—è—Å—ã–Ω—ã–Ω –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞—Å—ã –∂–∞–Ω–∞ —Å–ø–æ—Ä—Ç—Ç—É–∫ –±–∏–ª–∏–º –±–µ—Ä“Ø“Ø —Ç–∞—Ä–º–∞–≥—ã–Ω–¥–∞ –∏–∑–∏–ª–¥”©”©–ª”©—Ä.',
                'description_en': 'Research in the field of physical education pedagogy and sports education.',
                'features_ru': [
                    '–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ —Å–ø–æ—Ä—Ç–µ',
                    '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏',
                    '–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π',
                    '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞'
                ],
                'features_ky': [
                    '–°–ø–æ—Ä—Ç—Ç–æ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞–ª—ã–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä',
                    '–ë–∏–ª–∏–º –±–µ—Ä“Ø“Ø –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–ª–∞—Ä—ã',
                    '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞–ª—ã–∫ –∏–∑–∏–ª–¥”©”©–ª”©—Ä–¥“Ø–Ω –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è—Å—ã',
                    '–ü—Ä–∞–∫—Ç–∏–∫–∞–ª—ã–∫ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞'
                ],
                'features_en': [
                    'Pedagogical technologies in sports',
                    'Educational innovations',
                    'Methodology of pedagogical research',
                    'Practical pedagogy'
                ],
                'order': 2
            }
        ]
        
        for program in programs_data:
            AspirantPrograms.objects.create(**program)

    def create_aspirant_requirements(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã"""
        requirements_data = [
            {
                'title_ru': '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
                'title_ky': '–ë–∏–ª–∏–º –±–µ—Ä“Ø“Ø',
                'title_en': 'Education',
                'description_ru': '–î–∏–ø–ª–æ–º –º–∞–≥–∏—Å—Ç—Ä–∞ –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏. –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –Ω–µ –Ω–∏–∂–µ 4.0.',
                'description_ky': '–ü—Ä–æ—Ñ–∏–ª–¥–∏–∫ –∞–¥–∏—Å—Ç–∏–∫ –±–æ—é–Ω—á–∞ –º–∞–≥–∏—Å—Ç—Ä –∂–µ –∞–¥–∏—Å –¥–∏–ø–ª–æ–º—ã. –û—Ä—Ç–æ—á–æ –±–∞–∞ 4.0–¥”©–Ω —Ç”©–º”©–Ω —ç–º–µ—Å.',
                'description_en': 'Master\'s or specialist diploma in a relevant specialty. Average grade not less than 4.0.',
                'order': 1
            },
            {
                'title_ru': '–ù–∞—É—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
                'title_ky': '–ò–ª–∏–º–∏–π –∏—à–º–µ—Ä–¥“Ø“Ø–ª“Ø–∫',
                'title_en': 'Scientific activity',
                'description_ru': '–ù–∞–ª–∏—á–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π, —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—É—á–Ω—ã—Ö –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.',
                'description_ky': '–ë–∞—Å—ã–ª–º–∞–ª–∞—Ä–¥—ã–Ω –±–æ–ª—É—à—É, –∏–ª–∏–º–∏–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è–ª–∞—Ä–≥–∞ –∫–∞—Ç—ã—à—É—É, –∏–∑–∏–ª–¥”©”© –¥–æ–ª–±–æ–æ—Ä–ª–æ—Ä—É.',
                'description_en': 'Availability of publications, participation in scientific conferences, research projects.',
                'order': 2
            },
            {
                'title_ru': '–Ø–∑—ã–∫–æ–≤—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è',
                'title_ky': '–¢–∏–ª–¥–∏–∫ —Ç–∞–ª–∞–ø—Ç–∞—Ä',
                'title_en': 'Language requirements',
                'description_ru': '–ó–Ω–∞–Ω–∏–µ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ B2, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º –∏–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.',
                'description_ky': '–ß–µ—Ç —Ç–∏–ª–∏–Ω B2 –¥–µ“£–≥—ç—ç–ª–∏–Ω–¥–µ –±–∏–ª“Ø“Ø, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∂–µ —Ç–µ—Å—Ç–∏—Ä–ª”©”© –º–µ–Ω–µ–Ω —ã—Ä–∞—Å—Ç–∞–ª–≥–∞–Ω.',
                'description_en': 'Knowledge of a foreign language at B2 level, confirmed by certificate or testing.',
                'order': 3
            }
        ]
        
        for requirement in requirements_data:
            AspirantRequirements.objects.create(**requirement)

    def create_aspirant_main_dates(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞—Ç –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã"""
        dates_data = [
            {
                'event_name_ru': '–ü—Ä–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                'event_name_ky': '–î–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä–¥–∏ –∫–∞–±—ã–ª –∞–ª—É—É',
                'event_name_en': 'Document submission',
                'date': '1 –º–∞—è - 30 –∏—é–Ω—è',
                'order': 1
            },
            {
                'event_name_ru': '–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã',
                'event_name_ky': '–ö–∏—Ä“Ø“Ø —ç–∫–∑–∞–º–µ–Ω–¥–µ—Ä–∏',
                'event_name_en': 'Entrance exams',
                'date': '5 –∏—é–ª—è - 20 –∏—é–ª—è',
                'order': 2
            },
            {
                'event_name_ru': '–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ',
                'event_name_ky': '–ú–∞–µ–∫',
                'event_name_en': 'Interview',
                'date': '25 –∏—é–ª—è - 30 –∏—é–ª—è',
                'order': 3
            },
            {
                'event_name_ru': '–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ',
                'event_name_ky': '–ö–∞–±—ã–ª –∞–ª—É—É',
                'event_name_en': 'Enrollment',
                'date': '5 –∞–≤–≥—É—Å—Ç–∞',
                'order': 4
            },
            {
                'event_name_ru': '–ù–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è',
                'event_name_ky': '–û–∫—É—É–Ω—É –±–∞—à—Ç–æ–æ',
                'event_name_en': 'Start of studies',
                'date': '1 —Å–µ–Ω—Ç—è–±—Ä—è',
                'order': 5
            }
        ]
        
        for date_item in dates_data:
            AspirantMainDate.objects.create(**date_item)

    def create_aspirant_documents(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã"""
        documents_data = [
            {
                'document_name_ru': '–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏–µ–º–∞ –≤ –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—É',
                'document_name_ky': '–ê—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä–∞–≥–∞ –∫–∞–±—ã–ª –∞–ª—É—É —ç—Ä–µ–∂–µ–ª–µ—Ä–∏',
                'document_name_en': 'PhD admission rules',
                'order': 1
            },
            {
                'document_name_ru': '–ü—Ä–æ–≥—Ä–∞–º–º—ã –∫–∞–Ω–¥–∏–¥–∞—Ç—Å–∫–∏—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤',
                'document_name_ky': '–ö–∞–Ω–¥–∏–¥–∞—Ç—Ç—ã–∫ —ç–∫–∑–∞–º–µ–Ω–¥–µ—Ä–¥–∏–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∞–ª–∞—Ä—ã',
                'document_name_en': 'Candidate exam programs',
                'order': 2
            },
            {
                'document_name_ru': '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏–∏',
                'document_name_ky': '–î–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏—è–≥–∞ —Ç–∞–ª–∞–ø—Ç–∞—Ä',
                'document_name_en': 'Dissertation requirements',
                'order': 3
            },
            {
                'document_name_ru': '–°–ø–∏—Å–æ–∫ –Ω–∞—É—á–Ω—ã—Ö —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π',
                'document_name_ky': '–ò–ª–∏–º–∏–π –∂–µ—Ç–µ–∫—á–∏–ª–µ—Ä–¥–∏–Ω —Ç–∏–∑–º–µ—Å–∏',
                'document_name_en': 'List of scientific supervisors',
                'order': 4
            },
            {
                'document_name_ru': '–§–æ—Ä–º–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—É',
                'document_name_ky': '–ê—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä–∞–≥–∞ –∞—Ä—ã–∑ —Ñ–æ—Ä–º–∞—Å—ã',
                'document_name_en': 'PhD application form',
                'order': 5
            }
        ]
        
        for doc in documents_data:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
            content = f"–î–æ–∫—É–º–µ–Ω—Ç: {doc['document_name_ru']}\n–≠—Ç–æ –æ–±—Ä–∞–∑–µ—Ü –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—ã."
            file_content = ContentFile(content.encode('utf-8'))
            file_name = f"aspirant_doc_{doc['order']}.txt"
            
            aspirant_doc = AspirantDocuments.objects.create(
                document_name_ru=doc['document_name_ru'],
                document_name_ky=doc['document_name_ky'],
                document_name_en=doc['document_name_en'],
                order=doc['order']
            )
            aspirant_doc.file.save(file_name, file_content, save=True)