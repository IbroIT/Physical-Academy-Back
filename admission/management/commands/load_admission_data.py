from django.core.management.base import BaseCommand
from admission.models import (
    QuotaType, QuotaRequirement, QuotaBenefit, 
    QuotaStats, AdditionalSupport, ProcessStep
)


class Command(BaseCommand):
    help = '–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è admission –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞'

    def handle(self, *args, **options):
        self.stdout.write('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è admission...')
        
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        QuotaType.objects.all().delete()
        QuotaStats.objects.all().delete()
        AdditionalSupport.objects.all().delete()
        ProcessStep.objects.all().delete()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –∫–≤–æ—Ç
        self.create_quota_types()
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.create_quota_stats()
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
        self.create_additional_support()
        
        # –°–æ–∑–¥–∞–µ–º —à–∞–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
        self.create_process_steps()
        
        self.stdout.write(
            self.style.SUCCESS('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')
        )

    def create_quota_types(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–≤–æ—Ç —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏"""
        
        # –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∫–≤–æ—Ç–∞
        sports_quota = QuotaType.objects.create(
            type='sports',
            title_ru='–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –∫–≤–æ—Ç–∞',
            title_ky='–°–ø–æ—Ä—Ç—Ç—É–∫ –∫–≤–æ—Ç–∞',
            title_en='Sports Quota',
            description_ru='–î–ª—è —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ —Å –≤—ã–¥–∞—é—â–∏–º–∏—Å—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏',
            description_ky='–ú—ã–∫—Ç—ã –∂–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä–∏ –±–∞—Ä —Å–ø–æ—Ä—Ç—á—É–ª–∞—Ä “Ø—á“Ø–Ω',
            description_en='For athletes with outstanding achievements',
            icon='üèÜ',
            spots=15,
            deadline='20 –∞–≤–≥—É—Å—Ç–∞',
            color='blue',
            order=1
        )
        
        # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∫–≤–æ—Ç—ã
        sports_requirements = [
            {
                'ru': '–î–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'kg': '–°–ø–æ—Ä—Ç—Ç—É–∫ –∂–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä–¥–∏ —ã—Ä–∞—Å—Ç–∞–≥–∞–Ω –¥–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä',
                'en': 'Documents confirming sports achievements'
            },
            {
                'ru': '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –æ—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏',
                'kg': '–°–ø–æ—Ä—Ç —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è—Å—ã–Ω–∞–Ω —Å—É–Ω—É—à',
                'en': 'Recommendation from sports federation'
            },
            {
                'ru': '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –æ –¥–æ–ø—É—Å–∫–µ –∫ –∑–∞–Ω—è—Ç–∏—è–º',
                'kg': '–ú–∞—à—ã–≥—É—É–ª–∞—Ä–≥–∞ —É—Ä—É–∫—Å–∞—Ç –±–µ—Ä“Ø“Ø —Ç—É—É—Ä–∞–ª—É—É –º–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ —Å–ø—Ä–∞–≤–∫–∞',
                'en': 'Medical certificate for training admission'
            },
            {
                'ru': '–ê—Ç—Ç–µ—Å—Ç–∞—Ç –æ —Å—Ä–µ–¥–Ω–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏',
                'kg': '–û—Ä—Ç–æ –±–∏–ª–∏–º —Ç—É—É—Ä–∞–ª—É—É –∞—Ç—Ç–µ—Å—Ç–∞—Ç',
                'en': 'Secondary education certificate'
            }
        ]
        
        for idx, req in enumerate(sports_requirements):
            QuotaRequirement.objects.create(
                quota_type=sports_quota,
                requirement_ru=req['ru'],
                requirement_kg=req['ky'],
                requirement_en=req['en'],
                order=idx + 1
            )
        
        # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –∫–≤–æ—Ç—ã
        sports_benefits = [
            {
                'ru': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —É—á–µ–±–Ω—ã–π –ø–ª–∞–Ω',
                'kg': '–ñ–µ–∫–µ –æ–∫—É—É –ø–ª–∞–Ω—ã',
                'en': 'Individual study plan'
            },
            {
                'ru': '–°–æ–≤–º–µ—â–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —É—á–µ–±—ã',
                'kg': '–ú–∞—à—ã–≥—É—É–ª–∞—Ä –º–µ–Ω–µ–Ω –æ–∫—É—É–Ω—É –∞–π–∫–∞–ª—ã—à—Ç—ã—Ä—É—É',
                'en': 'Combining training and studies'
            },
            {
                'ru': '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'kg': '–°–ø–æ—Ä—Ç—Ç—É–∫ —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'en': 'Sports scholarship'
            },
            {
                'ru': '–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º –æ–±—â–µ–∂–∏—Ç–∏–∏',
                'kg': '–°–ø–æ—Ä—Ç—Ç—É–∫ –∂–∞—Ç–∞–∫–∞–Ω–∞–¥–∞ –∂–∞—à–æ–æ',
                'en': 'Accommodation in sports dormitory'
            }
        ]
        
        for idx, benefit in enumerate(sports_benefits):
            QuotaBenefit.objects.create(
                quota_type=sports_quota,
                benefit_ru=benefit['ru'],
                benefit_kg=benefit['ky'],
                benefit_en=benefit['en'],
                order=idx + 1
            )
        
        # –ö–≤–æ—Ç–∞ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è
        health_quota = QuotaType.objects.create(
            type='health',
            title_ru='–ö–≤–æ—Ç–∞ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è',
            title_ky='–î–µ–Ω —Å–æ–æ–ª—É–∫ –∞–±–∞–ª—ã –±–æ—é–Ω—á–∞ –∫–≤–æ—Ç–∞',
            title_en='Health Status Quota',
            description_ru='–î–ª—è –ª–∏—Ü —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –∑–¥–æ—Ä–æ–≤—å—è',
            description_ky='–î–µ–Ω —Å–æ–æ–ª—É–∫ –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–∫—Ç”©—Ä“Ø —á–µ–∫—Ç–µ–ª–≥–µ–Ω –∞–¥–∞–º–¥–∞—Ä “Ø—á“Ø–Ω',
            description_en='For people with limited health opportunities',
            icon='‚ù§Ô∏è',
            spots=10,
            deadline='25 –∞–≤–≥—É—Å—Ç–∞',
            color='green',
            order=2
        )
        
        # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–≤–æ—Ç—ã –ø–æ –∑–¥–æ—Ä–æ–≤—å—é
        health_requirements = [
            {
                'ru': '–ú–µ–¥–∏–∫–æ-—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞',
                'kg': '–ú–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫-—Å–æ—Ü–∏–∞–ª–¥—ã–∫ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞',
                'en': 'Medical-social examination'
            },
            {
                'ru': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏–∏',
                'kg': '–ñ–µ–∫–µ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∞—Å—ã',
                'en': 'Individual rehabilitation program'
            },
            {
                'ru': '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ –≤—Ä–∞—á–µ–±–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –∞–∫–∞–¥–µ–º–∏–∏',
                'kg': '–ê–∫–∞–¥–µ–º–∏—è–Ω—ã–Ω –¥–∞—Ä—ã–≥–µ—Ä –∫–æ–º–∏—Å—Å–∏—è—Å—ã–Ω—ã–Ω –∫–æ—Ä—É—Ç—É–Ω–¥—É—Å—É',
                'en': 'Conclusion of academy medical commission'
            }
        ]
        
        for idx, req in enumerate(health_requirements):
            QuotaRequirement.objects.create(
                quota_type=health_quota,
                requirement_ru=req['ru'],
                requirement_kg=req['ky'],
                requirement_en=req['en'],
                order=idx + 1
            )
        
        # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –∫–≤–æ—Ç—ã –ø–æ –∑–¥–æ—Ä–æ–≤—å—é
        health_benefits = [
            {
                'ru': '–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è',
                'kg': '–ê–¥–∞–ø—Ç–∞—Ü–∏—è–ª–∞–Ω–≥–∞–Ω –æ–∫—É—É –ø—Ä–æ–≥—Ä–∞–º–º–∞—Å—ã',
                'en': 'Adapted learning program'
            },
            {
                'ru': '–î–æ—Å—Ç—É–ø–Ω–∞—è —Å—Ä–µ–¥–∞',
                'kg': '–ñ–µ—Ç–∫–∏–ª–∏–∫—Ç“Ø“Ø —á”©–π—Ä”©',
                'en': 'Accessible environment'
            },
            {
                'ru': '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—å—é—Ç–æ—Ä',
                'kg': '–ñ–µ–∫–µ —Ç—å—é—Ç–æ—Ä',
                'en': 'Personal tutor'
            },
            {
                'ru': '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
                'kg': '–°–æ—Ü–∏–∞–ª–¥—ã–∫ –∫–æ–ª–¥–æ–æ',
                'en': 'Social support'
            }
        ]
        
        for idx, benefit in enumerate(health_benefits):
            QuotaBenefit.objects.create(
                quota_type=health_quota,
                benefit_ru=benefit['ru'],
                benefit_kg=benefit['ky'],
                benefit_en=benefit['en'],
                order=idx + 1
            )
        
        # –¶–µ–ª–µ–≤–∞—è –∫–≤–æ—Ç–∞
        target_quota = QuotaType.objects.create(
            type='target',
            title_ru='–¶–µ–ª–µ–≤–∞—è –∫–≤–æ—Ç–∞',
            title_ky='–ú–∞–∫—Å–∞—Ç—Ç—É—É –∫–≤–æ—Ç–∞',
            title_en='Target Quota',
            description_ru='–î–ª—è –±—É–¥—É—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π',
            description_ky='–°–ø–æ—Ä—Ç—Ç—É–∫ —É—é–º–¥–∞—Ä–¥—ã–Ω –∫–µ–ª–µ—á–µ–∫—Ç–µ–≥–∏ –∫—ã–∑–º–∞—Ç–∫–µ—Ä–ª–µ—Ä–∏ “Ø—á“Ø–Ω',
            description_en='For future employees of sports organizations',
            icon='üéØ',
            spots=20,
            deadline='15 –∞–≤–≥—É—Å—Ç–∞',
            color='cyan',
            order=3
        )
        
        # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –∫–≤–æ—Ç—ã
        target_requirements = [
            {
                'ru': '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                'kg': '–°–ø–æ—Ä—Ç—Ç—É–∫ —É—é–º–¥–∞–Ω –±–∞–≥—ã—Ç',
                'en': 'Referral from sports organization'
            },
            {
                'ru': '–¢—Ä–µ—Ö—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –¥–æ–≥–æ–≤–æ—Ä',
                'kg': '“Æ—á —Ç–∞—Ä–∞–ø—Ç—É—É –∫–µ–ª–∏—à–∏–º',
                'en': 'Tripartite agreement'
            },
            {
                'ru': '–û–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å 3 –≥–æ–¥–∞',
                'kg': '3 –∂—ã–ª –∏—à—Ç”©”© –º–∏–ª–¥–µ—Ç—Ç–µ–Ω–º–µ—Å–∏',
                'en': 'Commitment to work for 3 years'
            }
        ]
        
        for idx, req in enumerate(target_requirements):
            QuotaRequirement.objects.create(
                quota_type=target_quota,
                requirement_ru=req['ru'],
                requirement_kg=req['ky'],
                requirement_en=req['en'],
                order=idx + 1
            )
        
        # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –∫–≤–æ—Ç—ã
        target_benefits = [
            {
                'ru': '–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
                'kg': '–ö–µ–ø–∏–ª–¥–∏–∫ –±–µ—Ä–∏–ª–≥–µ–Ω –∂—É–º—É—à –æ—Ä–¥—É',
                'en': 'Guaranteed employment'
            },
            {
                'ru': '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö',
                'kg': '–ü—Ä–æ—Ñ–∏–ª–¥–∏–∫ —É—é–º–¥–∞—Ä–¥–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞',
                'en': 'Internship in specialized organizations'
            },
            {
                'ru': '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'kg': '–ö–æ—à—É–º—á–∞ —Å—Ç–∏–ø–µ–Ω–¥–∏—è',
                'en': 'Additional scholarship'
            }
        ]
        
        for idx, benefit in enumerate(target_benefits):
            QuotaBenefit.objects.create(
                quota_type=target_quota,
                benefit_ru=benefit['ru'],
                benefit_kg=benefit['ky'],
                benefit_en=benefit['en'],
                order=idx + 1
            )

    def create_quota_stats(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
        stats_data = [
            {
                'stat_type': 'total_spots',
                'number': '45',
                'label_ru': '–≤—Å–µ–≥–æ –º–µ—Å—Ç –ø–æ –∫–≤–æ—Ç–∞–º',
                'label_ky': '–∫–≤–æ—Ç–∞–ª–∞—Ä –±–æ—é–Ω—á–∞ –∂–∞–ª–ø—ã –æ—Ä—É–Ω–¥–∞—Ä',
                'label_en': 'total quota spots',
                'description_ru': '–ï–∂–µ–≥–æ–¥–Ω–æ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è',
                'description_ky': '–ñ—ã–ª —Å–∞–π—ã–Ω –±”©–ª“Ø–Ω”©—Ç',
                'description_en': 'Allocated annually',
                'order': 1
            },
            {
                'stat_type': 'success_rate',
                'number': '98%',
                'label_ru': '—É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è',
                'label_ky': '–∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø –∫–∞–±—ã–ª –∞–ª—É—É',
                'label_en': 'successful admission',
                'description_ru': '–ü—Ä–æ—Ö–æ–¥—è—Ç –∫–æ–Ω–∫—É—Ä—Å–Ω—ã–π –æ—Ç–±–æ—Ä',
                'description_ky': '–ö–æ–Ω–∫—É—Ä—Å—Ç—É–∫ —Ç–∞–Ω–¥–æ–æ–¥–æ–Ω ”©—Ç“Ø—à”©—Ç',
                'description_en': 'Pass competitive selection',
                'order': 2
            },
            {
                'stat_type': 'organizations',
                'number': '25+',
                'label_ru': '—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π',
                'label_ky': '—Å–ø–æ—Ä—Ç—Ç—É–∫ —É—é–º–¥–∞—Ä',
                'label_en': 'sports organizations',
                'description_ru': '–£—á–∞—Å—Ç–≤—É—é—Ç –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ',
                'description_ky': '–ü—Ä–æ–≥—Ä–∞–º–º–∞–≥–∞ –∫–∞—Ç—ã—à—ã—à–∞—Ç',
                'description_en': 'Participate in the program',
                'order': 3
            },
            {
                'stat_type': 'quota_types',
                'number': '3',
                'label_ru': '–≤–∏–¥–∞ –∫–≤–æ—Ç',
                'label_ky': '–∫–≤–æ—Ç–∞ —Ç“Ø—Ä“Ø',
                'label_en': 'types of quotas',
                'description_ru': '–î–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤',
                'description_ky': '–¢“Ø—Ä–¥“Ø“Ø –∫–∞—Ç–µ–≥–æ—Ä–∏—è–¥–∞–≥—ã –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç—Ç–µ—Ä “Ø—á“Ø–Ω',
                'description_en': 'For different categories of applicants',
                'order': 4
            }
        ]
        
        for stat in stats_data:
            QuotaStats.objects.create(**stat)

    def create_additional_support(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        support_data = [
            {
                'support_ru': '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫',
                'support_ky': '–ñ–µ–∫–µ —Å–ø–æ—Ä—Ç—Ç—É–∫ –Ω–∞—Å–∞–∞—Ç—á—ã',
                'support_en': 'Personal sports mentor',
                'order': 1
            },
            {
                'support_ru': '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å',
                'support_ky': '–°–ø–æ—Ä—Ç—Ç—É–∫ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –∂–∞–Ω–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å',
                'support_en': 'Sports equipment and inventory',
                'order': 2
            },
            {
                'support_ru': '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ',
                'support_ky': '–ê–¥–∏—Å—Ç–µ—à—Ç–∏—Ä–∏–ª–≥–µ–Ω —Ç–∞–º–∞–∫-–∞—à',
                'support_en': 'Specialized nutrition',
                'order': 3
            },
            {
                'support_ru': '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ',
                'support_ky': '–ú–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ –∫–æ—à—Ç–æ–æ –∂–∞–Ω–∞ –∫–∞–ª—ã–±—ã–Ω–∞ –∫–µ–ª—Ç–∏—Ä“Ø“Ø',
                'support_en': 'Medical support and recovery',
                'order': 4
            }
        ]
        
        for support in support_data:
            AdditionalSupport.objects.create(**support)

    def create_process_steps(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
        steps_data = [
            {
                'step_number': 1,
                'title_ru': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
                'title_ky': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
                'title_en': 'Consultation',
                'description_ru': '–ü–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–≤–æ—Ç—É',
                'description_ky': '–ö–∞–±—ã–ª –∞–ª—É—É –∫–æ–º–∏—Å—Å–∏—è—Å—ã–Ω–∞–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∞–ª—ã–ø, —ã–ª–∞–π—ã–∫—Ç—É—É –∫–≤–æ—Ç–∞–Ω—ã –∞–Ω—ã–∫—Ç–∞“£—ã–∑',
                'description_en': 'Get consultation from admission committee and determine suitable quota',
                'color_scheme': 'from-blue-500 to-cyan-500'
            },
            {
                'step_number': 2,
                'title_ru': '–î–æ–∫—É–º–µ–Ω—Ç—ã',
                'title_ky': '–î–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä',
                'title_en': 'Documents',
                'description_ru': '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                'description_ky': '–ö–µ—Ä–µ–∫—Ç“Ø“Ø –¥–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä–¥–∏–Ω —Ç–æ–ø—Ç–æ–º—É–Ω –∂–∞–Ω–∞ —Å–ø–æ—Ä—Ç—Ç—É–∫ –∂–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä–¥–∏ –¥–∞—è—Ä–¥–∞“£—ã–∑',
                'description_en': 'Prepare necessary document package and sports achievements',
                'color_scheme': 'from-green-500 to-emerald-500'
            },
            {
                'step_number': 3,
                'title_ru': '–ü–æ–¥–∞—á–∞',
                'title_ky': '–¢–∞–ø—à—ã—Ä—É—É',
                'title_en': 'Submission',
                'description_ru': '–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è',
                'description_ky': '–ê—Ä—ã–∑ –±–µ—Ä–∏–ø, –∫–æ—à—É–º—á–∞ —Å—ã–Ω–æ–æ–ª–æ—Ä–¥–æ–Ω ”©—Ç“Ø“£“Ø–∑',
                'description_en': 'Submit application and pass additional tests',
                'color_scheme': 'from-purple-500 to-pink-500'
            }
        ]
        
        for step in steps_data:
            ProcessStep.objects.create(**step)
