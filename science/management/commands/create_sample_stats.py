from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import date
from science.models import PublicationStats, VestnikStats, VestnikIssue, VestnikArticle


class Command(BaseCommand):
    help = "Create sample publication and vestnik statistics"

    def handle(self, *args, **options):
        self.stdout.write("Creating sample publication statistics...")

        # Create Publication Stats
        pub_stats = [
            {
                "label_ru": "–í—Å–µ–≥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π",
                "label_en": "Total Publications",
                "label_kg": "–ë–∞—Ä–¥—ã–∫ –±–∞—Å—ã–ª–º–∞–ª–∞—Ä",
                "value": 125,
                "icon": "üìö",
                "order": 1,
            },
            {
                "label_ru": "–ù–∞—É—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏",
                "label_en": "Research Articles",
                "label_kg": "–ò–∑–∏–ª–¥”©”© –º–∞–∫–∞–ª–∞–ª–∞—Ä—ã",
                "value": 85,
                "icon": "üìÑ",
                "order": 2,
            },
            {
                "label_ru": "–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
                "label_en": "Citations",
                "label_kg": "–®–∏–ª—Ç–µ–º–µ–ª–µ—Ä",
                "value": 450,
                "icon": "üìä",
                "order": 3,
            },
            {
                "label_ru": "H-–∏–Ω–¥–µ–∫—Å",
                "label_en": "H-Index",
                "label_kg": "H-–∏–Ω–¥–µ–∫—Å",
                "value": 15,
                "icon": "üìà",
                "order": 4,
            },
        ]

        for stat_data in pub_stats:
            stat, created = PublicationStats.objects.get_or_create(
                order=stat_data["order"], defaults=stat_data
            )
            if created:
                self.stdout.write(f"Created: {stat.label_ru}")
            else:
                # Update existing
                for key, value in stat_data.items():
                    setattr(stat, key, value)
                stat.save()
                self.stdout.write(f"Updated: {stat.label_ru}")

        self.stdout.write("Creating sample Vestnik statistics...")

        # Create Vestnik Stats
        vestnik_stats = [
            {
                "label_ru": "–í—ã–ø—É—â–µ–Ω–æ –Ω–æ–º–µ—Ä–æ–≤",
                "label_en": "Issues Published",
                "label_kg": "–ß—ã–≥–∞—Ä—ã–ª–≥–∞–Ω —Å–∞–Ω–¥–∞—Ä",
                "value": 24,
                "icon": "üì∞",
                "order": 1,
            },
            {
                "label_ru": "–°—Ç–∞—Ç–µ–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ",
                "label_en": "Articles Published",
                "label_kg": "–ë–∞—Å—ã–ª–≥–∞–Ω –º–∞–∫–∞–ª–∞–ª–∞—Ä",
                "value": 180,
                "icon": "üìù",
                "order": 2,
            },
            {
                "label_ru": "–ê–≤—Ç–æ—Ä–æ–≤",
                "label_en": "Authors",
                "label_kg": "–ê–≤—Ç–æ—Ä–ª–æ—Ä",
                "value": 95,
                "icon": "üë•",
                "order": 3,
            },
            {
                "label_ru": "–°—Ç—Ä–∞–Ω",
                "label_en": "Countries",
                "label_kg": "”®–ª–∫”©–ª”©—Ä",
                "value": 12,
                "icon": "üåç",
                "order": 4,
            },
        ]

        for stat_data in vestnik_stats:
            stat, created = VestnikStats.objects.get_or_create(
                order=stat_data["order"], defaults=stat_data
            )
            if created:
                self.stdout.write(f"Created: {stat.label_ru}")
            else:
                # Update existing
                for key, value in stat_data.items():
                    setattr(stat, key, value)
                stat.save()
                self.stdout.write(f"Updated: {stat.label_ru}")

        self.stdout.write("Creating sample Vestnik issues...")

        # Create sample Vestnik Issues
        sample_issues = [
            {
                "title_ru": "–í–µ—Å—Ç–Ω–∏–∫ –§–∏–∑–∏—á–µ—Å–∫–æ–π –ê–∫–∞–¥–µ–º–∏–∏",
                "title_en": "Bulletin of Physical Academy",
                "title_kg": "–§–∏–∑–∏–∫–∞–ª—ã–∫ –∞–∫–∞–¥–µ–º–∏—è–Ω—ã–Ω –∂–∞—Ä—á—ã—Å—ã",
                "description_ru": "–ù–∞—É—á–Ω—ã–π –∂—É—Ä–Ω–∞–ª –ø–æ —Ñ–∏–∑–∏–∫–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –Ω–∞—É–∫–∞–º",
                "description_en": "Scientific journal on physics and technical sciences",
                "description_kg": "–§–∏–∑–∏–∫–∞ –∂–∞–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞–ª—ã–∫ –∏–ª–∏–º–¥–µ—Ä –±–æ—é–Ω—á–∞ –∏–ª–∏–º–∏–π –∂—É—Ä–Ω–∞–ª",
                "volume_number": 1,
                "issue_number": 1,
                "year": 2024,
                "publication_date": date(2024, 3, 15),
                "issn_print": "1234-5678",
                "issn_online": "8765-4321",
                "is_featured": True,
                "is_published": True,
                "order": 1,
            },
            {
                "title_ru": "–í–µ—Å—Ç–Ω–∏–∫ –§–∏–∑–∏—á–µ—Å–∫–æ–π –ê–∫–∞–¥–µ–º–∏–∏",
                "title_en": "Bulletin of Physical Academy",
                "title_kg": "–§–∏–∑–∏–∫–∞–ª—ã–∫ –∞–∫–∞–¥–µ–º–∏—è–Ω—ã–Ω –∂–∞—Ä—á—ã—Å—ã",
                "description_ru": "–ù–∞—É—á–Ω—ã–π –∂—É—Ä–Ω–∞–ª –ø–æ —Ñ–∏–∑–∏–∫–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –Ω–∞—É–∫–∞–º",
                "description_en": "Scientific journal on physics and technical sciences",
                "description_kg": "–§–∏–∑–∏–∫–∞ –∂–∞–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞–ª—ã–∫ –∏–ª–∏–º–¥–µ—Ä –±–æ—é–Ω—á–∞ –∏–ª–∏–º–∏–π –∂—É—Ä–Ω–∞–ª",
                "volume_number": 1,
                "issue_number": 2,
                "year": 2024,
                "publication_date": date(2024, 6, 15),
                "issn_print": "1234-5678",
                "issn_online": "8765-4321",
                "is_featured": False,
                "is_published": True,
                "order": 2,
            },
            {
                "title_ru": "–í–µ—Å—Ç–Ω–∏–∫ –§–∏–∑–∏—á–µ—Å–∫–æ–π –ê–∫–∞–¥–µ–º–∏–∏",
                "title_en": "Bulletin of Physical Academy",
                "title_kg": "–§–∏–∑–∏–∫–∞–ª—ã–∫ –∞–∫–∞–¥–µ–º–∏—è–Ω—ã–Ω –∂–∞—Ä—á—ã—Å—ã",
                "description_ru": "–ù–∞—É—á–Ω—ã–π –∂—É—Ä–Ω–∞–ª –ø–æ —Ñ–∏–∑–∏–∫–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –Ω–∞—É–∫–∞–º",
                "description_en": "Scientific journal on physics and technical sciences",
                "description_kg": "–§–∏–∑–∏–∫–∞ –∂–∞–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∞–ª—ã–∫ –∏–ª–∏–º–¥–µ—Ä –±–æ—é–Ω—á–∞ –∏–ª–∏–º–∏–π –∂—É—Ä–Ω–∞–ª",
                "volume_number": 1,
                "issue_number": 3,
                "year": 2024,
                "publication_date": date(2024, 9, 15),
                "issn_print": "1234-5678",
                "issn_online": "8765-4321",
                "is_featured": False,
                "is_published": True,
                "order": 3,
            },
        ]

        for issue_data in sample_issues:
            issue, created = VestnikIssue.objects.get_or_create(
                volume_number=issue_data["volume_number"],
                issue_number=issue_data["issue_number"],
                year=issue_data["year"],
                defaults=issue_data,
            )
            if created:
                self.stdout.write(
                    f"Created issue: Vol.{issue.volume_number} ‚Ññ{issue.issue_number} ({issue.year})"
                )

                # Create sample articles for this issue
                sample_articles = [
                    {
                        "title_ru": "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –≤ –Ω–∞–Ω–æ–º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö",
                        "title_en": "Quantum effects in nanomaterials",
                        "author_ru": "–ê.–ò. –ü–µ—Ç—Ä–æ–≤, –ë.–°. –°–∏–¥–æ—Ä–æ–≤",
                        "author_en": "A.I. Petrov, B.S. Sidorov",
                        "abstract_ru": "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –≤ –Ω–∞–Ω–æ—Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ö",
                        "abstract_en": "Study of quantum effects in nanostructures",
                        "keywords_ru": "–∫–≤–∞–Ω—Ç–æ–≤–∞—è —Ñ–∏–∑–∏–∫–∞, –Ω–∞–Ω–æ–º–∞—Ç–µ—Ä–∏–∞–ª—ã, –Ω–∞–Ω–æ—Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
                        "keywords_en": "quantum physics, nanomaterials, nanostructures",
                        "pages_from": 1,
                        "pages_to": 15,
                        "article_type": "research",
                        "order": 1,
                    },
                    {
                        "title_ru": "–¢–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å –∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
                        "title_en": "Thermal conductivity of composite materials",
                        "author_ru": "–í.–ù. –ö—É–∑–Ω–µ—Ü–æ–≤",
                        "author_en": "V.N. Kuznetsov",
                        "abstract_ru": "–ê–Ω–∞–ª–∏–∑ —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç–∏ –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
                        "abstract_en": "Analysis of thermal conductivity of new composite materials",
                        "keywords_ru": "—Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å, –∫–æ–º–ø–æ–∑–∏—Ç—ã, –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤–µ–¥–µ–Ω–∏–µ",
                        "keywords_en": "thermal conductivity, composites, materials science",
                        "pages_from": 16,
                        "pages_to": 28,
                        "article_type": "research",
                        "order": 2,
                    },
                ]

                for article_data in sample_articles:
                    article_data["issue"] = issue
                    VestnikArticle.objects.get_or_create(
                        issue=issue, order=article_data["order"], defaults=article_data
                    )
                    self.stdout.write(f'  Created article: {article_data["title_ru"]}')
            else:
                self.stdout.write(
                    f"Issue already exists: Vol.{issue.volume_number} ‚Ññ{issue.issue_number} ({issue.year})"
                )

        self.stdout.write(
            self.style.SUCCESS("Successfully created/updated sample data!")
        )
