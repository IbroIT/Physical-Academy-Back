from django.test import TestCase
from .models import Publication, PublicationStats


class PublicationTests(TestCase):
    def setUp(self):
        self.publication = Publication.objects.create(
            title_ru="–¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è",
            title_en="Test Publication",
            title_kg="–¢–µ—Å—Ç –±–∞—Å—ã–ª–º–∞",
            authors_ru="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            authors_en="Ivan Ivanov",
            authors_kg="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            year=2023,
            journal="Test Journal",
            citation_count=10,
            publication_type="article",
        )

    def test_publication_creation(self):
        self.assertEqual(self.publication.title_ru, "–¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è")
        self.assertEqual(self.publication.title_en, "Test Publication")
        self.assertEqual(self.publication.year, 2023)

    def test_publication_str(self):
        self.assertEqual(str(self.publication), "–¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è")


class PublicationStatsTests(TestCase):
    def setUp(self):
        self.stat = PublicationStats.objects.create(
            label_ru="–í—Å–µ–≥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π",
            label_en="Total publications",
            label_kg="–ñ–∞–ª–ø—ã –±–∞—Å—ã–ª–º–∞–ª–∞—Ä",
            value=42,
            icon="üìö",
            order=1,
        )

    def test_stats_creation(self):
        self.assertEqual(self.stat.value, 42)
        self.assertEqual(self.stat.icon, "üìö")

    def test_stats_str(self):
        self.assertEqual(str(self.stat), "–í—Å–µ–≥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π: 42")
