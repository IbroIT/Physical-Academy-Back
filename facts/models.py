from django.db import models
from django.utils.translation import gettext_lazy as _

class Fact(models.Model):
    # –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è (–Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º—ã–µ)
    end_value = models.PositiveIntegerField(verbose_name=_("–ö–æ–Ω–µ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"))
    icon = models.CharField(
        max_length=50, 
        verbose_name=_("–ò–∫–æ–Ω–∫–∞"),
        help_text=_("–≠–º–æ–¥–∑–∏ –∏–ª–∏ –∫–æ–¥ –∏–∫–æ–Ω–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: üéì, üèÜ, ‚öΩ")
    )
    duration = models.PositiveIntegerField(
        default=2000,
        verbose_name=_("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ (–º—Å)"),
        help_text=_("–í—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö")
    )
    delay = models.PositiveIntegerField(
        default=0,
        verbose_name=_("–ó–∞–¥–µ—Ä–∂–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ (–º—Å)"),
        help_text=_("–ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö")
    )
    color = models.CharField(
        max_length=50,
        default='blue',
        choices=[
            ('blue', _('–°–∏–Ω–∏–π')),
            ('green', _('–ó–µ–ª–µ–Ω—ã–π')),
            ('red', _('–ö—Ä–∞—Å–Ω—ã–π')),
            ('purple', _('–§–∏–æ–ª–µ—Ç–æ–≤—ã–π')),
            ('orange', _('–û—Ä–∞–Ω–∂–µ–≤—ã–π')),
            ('cyan', _('–ì–æ–ª—É–±–æ–π')),
        ],
        verbose_name=_("–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞")
    )
    is_active = models.BooleanField(default=True, verbose_name=_("–ê–∫—Ç–∏–≤–Ω—ã–π"))
    order = models.PositiveIntegerField(default=0, verbose_name=_("–ü–æ—Ä—è–¥–æ–∫"))
    created_at = models.DateTimeField(auto_now_add=True, verbose_name=_("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"))
    updated_at = models.DateTimeField(auto_now=True, verbose_name=_("–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"))

    class Meta:
        verbose_name = _("–§–∞–∫—Ç")
        verbose_name_plural = _("–§–∞–∫—Ç—ã")
        ordering = ['order', 'created_at']

    def __str__(self):
        return f"Fact {self.id} - {self.end_value}"

class FactTranslation(models.Model):
    LANGUAGES = [
        ('ru', '–†—É—Å—Å–∫–∏–π'),
        ('en', 'English'),
        ('kg', '–ö—ã—Ä–≥—ã–∑—á–∞'),
    ]

    fact = models.ForeignKey(Fact, on_delete=models.CASCADE, related_name='translations')
    language = models.CharField(max_length=2, choices=LANGUAGES, verbose_name=_("–Ø–∑—ã–∫"))
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º—ã–µ –ø–æ–ª—è
    label = models.CharField(max_length=200, verbose_name=_("–ü–æ–¥–ø–∏—Å—å"))

    class Meta:
        verbose_name = _("–ü–µ—Ä–µ–≤–æ–¥ —Ñ–∞–∫—Ç–∞")
        verbose_name_plural = _("–ü–µ—Ä–µ–≤–æ–¥—ã —Ñ–∞–∫—Ç–æ–≤")
        unique_together = ['fact', 'language']

    def __str__(self):
        return f"{self.fact.id} - {self.get_language_display()}"