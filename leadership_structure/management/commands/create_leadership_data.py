"""
Management command to create comprehensive sample data for leadership_structure module
"""
from django.core.management.base import BaseCommand
from leadership_structure.models import (
    BoardOfTrustees, BoardOfTrusteesStats,
    AuditCommission, AuditCommissionStatistics,
    AcademicCouncil, TradeUnionBenefit, TradeUnionEvent, TradeUnionStats,
    Commission, AdministrativeDepartment, AdministrativeUnit
)


class Command(BaseCommand):
    help = 'Creates comprehensive sample data for leadership structure module'

    def handle(self, *args, **kwargs):
        self.stdout.write(self.style.WARNING('Creating comprehensive sample data...\n'))

        # Board of Trustees - 5 members
        self.stdout.write('Creating Board of Trustees...')
        if BoardOfTrustees.objects.count() == 0:
            BoardOfTrustees.objects.create(
                name="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
                name_kg="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
                name_en="Ivan Ivanov",
                position="–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞",
                position_kg="–ö–∞–º–∫–æ—Ä–ª—É–∫ –∫–µ“£–µ—à–∏–Ω–∏–Ω —Ç”©—Ä–∞–≥–∞—Å—ã",
                position_en="Chairman of the Board of Trustees",
                bio="–û–ø—ã—Ç–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å 20-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏.",
                bio_kg="20 –∂—ã–ª–¥—ã–∫ —Ç–∞–∂—Ä—ã–π–±–∞—Å—ã –±–∞—Ä —Ç–∞–∂—Ä—ã–π–±–∞–ª—É—É –∂–µ—Ç–µ–∫—á–∏.",
                bio_en="Experienced leader with 20 years of educational management experience.",
                achievements=["–°–æ–∑–¥–∞–Ω–∏–µ 5 –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º", "–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –Ω–∞ 50 –º–ª–Ω —Ä—É–±–ª–µ–π"],
                achievements_kg=["5 –±–∏–ª–∏–º –±–µ—Ä“Ø“Ø –ø—Ä–æ–≥—Ä–∞–º–º–∞–ª–∞—Ä—ã–Ω —Ç“Ø–∑“Ø“Ø", "50 –º–ª–Ω —Å–æ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–ª–∞—Ä–¥—ã —Ç–∞—Ä—Ç—É—É"],
                achievements_en=["Created 5 educational programs", "Attracted 50 million rubles in investments"],
                email="ivanov@academy.edu.kg",
                phone="+996 312 123456",
                order=1
            )
            
            BoardOfTrustees.objects.create(
                name="–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
                name_kg="–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞",
                name_en="Maria Petrova",
                position="–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—è",
                position_kg="–¢”©—Ä–∞–≥–∞–Ω—ã–Ω –æ—Ä—É–Ω –±–∞—Å–∞—Ä—ã",
                position_en="Vice Chairman",
                bio="–≠–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã.",
                bio_kg="–°–ø–æ—Ä—Ç—Ç—É–∫ –º–µ–¥–∏—Ü–∏–Ω–∞ –∂–∞–Ω–∞ –¥–µ–Ω–µ —Ç–∞—Ä–±–∏—è –±–æ—é–Ω—á–∞ —ç–∫—Å–ø–µ—Ä—Ç.",
                bio_en="Expert in sports medicine and physical education.",
                achievements=["15 –Ω–∞—É—á–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π", "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–∏–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"],
                achievements_kg=["15 –∏–ª–∏–º–∏–π –∂–∞—Ä—ã—è–ª–æ–æ", "–ò–Ω–Ω–æ–≤–∞—Ü–∏—è–ª—ã–∫ –º–∞—à—ã–∫—Ç—ã—Ä—É—É —ã–∫–º–∞–ª–∞—Ä—ã–Ω –∏—à—Ç–µ–ø —á—ã–≥—É—É"],
                achievements_en=["15 scientific publications", "Development of innovative training methods"],
                email="petrova@academy.edu.kg",
                phone="+996 312 123457",
                order=2
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Board of Trustees members'))

        # Board Stats
        if BoardOfTrusteesStats.objects.count() == 0:
            BoardOfTrusteesStats.objects.create(
                label="–õ–µ—Ç –æ–ø—ã—Ç–∞",
                label_kg="–¢–∞–∂—Ä—ã–π–±–∞ –∂—ã–ª—ã",
                label_en="Years of Experience",
                target_value=15,
                icon="üìÖ",
                order=1
            )
            BoardOfTrusteesStats.objects.create(
                label="–ü—Ä–æ–µ–∫—Ç–æ–≤",
                label_kg="–î–æ–ª–±–æ–æ—Ä–ª–æ—Ä",
                label_en="Projects",
                target_value=24,
                icon="üöÄ",
                order=2
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Board statistics'))

        # Audit Commission
        if AuditCommission.objects.count() == 0:
            AuditCommission.objects.create(
                name="–°–∏–¥–æ—Ä–æ–≤ –ü–µ—Ç—Ä –ù–∏–∫–æ–ª–∞–µ–≤–∏—á",
                name_kg="–°–∏–¥–æ—Ä–æ–≤ –ü–µ—Ç—Ä –ù–∏–∫–æ–ª–∞–µ–≤–∏—á",
                name_en="Petr Sidorov",
                position="–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å —Ä–µ–≤–∏–∑–∏–æ–Ω–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏",
                position_kg="–†–µ–≤–∏–∑–∏—è–ª—ã–∫ –∫–æ–º–∏—Å—Å–∏—è–Ω—ã–Ω —Ç”©—Ä–∞–≥–∞—Å—ã",
                position_en="Chairman of the Audit Commission",
                department="–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç–¥–µ–ª",
                department_kg="–§–∏–Ω–∞–Ω—Å—ã –±”©–ª“Ø–º“Ø",
                department_en="Finance Department",
                achievements=["–ü—Ä–æ–≤–µ–¥–µ–Ω–æ 50+ –∞—É–¥–∏—Ç–æ–≤", "–≠–∫–æ–Ω–æ–º–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ 10 –º–ª–Ω —Ä—É–±–ª–µ–π"],
                achievements_kg=["50+ –∞—É–¥–∏—Ç ”©—Ç–∫”©—Ä“Ø–ª–¥“Ø", "10 –º–ª–Ω —Å–æ–º —ç–∫–æ–Ω–æ–º–∏—è"],
                achievements_en=["Conducted 50+ audits", "Saved 10 million rubles"],
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Audit Commission members'))

        # Audit Commission Statistics
        if AuditCommissionStatistics.objects.count() == 0:
            AuditCommissionStatistics.objects.create(
                label="–ê—É–¥–∏—Ç–æ–≤ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ",
                label_kg="–ê—É–¥–∏—Ç—Ç–µ—Ä ”©—Ç–∫”©—Ä“Ø–ª–¥“Ø",
                label_en="Audits Conducted",
                value="56",
                value_kg="56",
                value_en="56",
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Audit Commission statistics'))

        # Academic Council
        if AcademicCouncil.objects.count() == 0:
            AcademicCouncil.objects.create(
                name="–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä –ê–ª–µ–∫—Å–µ–µ–≤ –î–º–∏—Ç—Ä–∏–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
                name_kg="–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä –ê–ª–µ–∫—Å–µ–µ–≤ –î–º–∏—Ç—Ä–∏–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
                name_en="Professor Dmitry Alekseev",
                position="–ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å —É—á–µ–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞",
                position_kg="–ò–ª–∏–º–∏–π –∫–µ“£–µ—à—Ç–∏–Ω —Ç”©—Ä–∞–≥–∞—Å—ã",
                position_en="Chairman of the Academic Council",
                department="–ö–∞—Ñ–µ–¥—Ä–∞ —Ç–µ–æ—Ä–∏–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã",
                department_kg="–î–µ–Ω–µ —Ç–∞—Ä–±–∏—è —Ç–µ–æ—Ä–∏—è—Å—ã –∂–∞–Ω–∞ –º–µ—Ç–æ–¥–∏–∫–∞—Å—ã –∫–∞—Ñ–µ–¥—Ä–∞—Å—ã",
                department_en="Department of Theory and Methods of Physical Education",
                achievements=["30+ –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç", "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ 10 –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏–π", "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã"],
                achievements_kg=["30+ –∏–ª–∏–º–∏–π —ç–º–≥–µ–∫—Ç–µ—Ä", "10 –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏—è–≥–∞ –∂–µ—Ç–µ–∫—á–∏–ª–∏–∫", "–≠–ª –∞—Ä–∞–ª—ã–∫ —Å—ã–π–ª—ã–∫—Ç–∞—Ä"],
                achievements_en=["30+ scientific works", "Supervised 10 dissertations", "International awards"],
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Academic Council members'))

        # Trade Union Benefits
        if TradeUnionBenefit.objects.count() == 0:
            TradeUnionBenefit.objects.create(
                title="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ",
                title_kg="–ú–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ –∫–∞–º—Å—ã–∑–¥–∞–Ω–¥—ã—Ä—É—É",
                title_en="Medical Insurance",
                description="–ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —á–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞",
                description_kg="–ü—Ä–æ—Ñ—Å–æ—é–∑–¥—É–Ω –±–∞—Ä–¥—ã–∫ –º“Ø—á”©–ª”©—Ä“Ø “Ø—á“Ø–Ω —Ç–æ–ª—É–∫ –º–µ–¥–∏—Ü–∏–Ω–∞–ª—ã–∫ –∫–∞–º—Å—ã–∑–¥–∞–Ω–¥—ã—Ä—É—É –ø–∞–∫–µ—Ç–∏",
                description_en="Full medical insurance package for all union members",
                icon="üè•",
                order=1
            )
            TradeUnionBenefit.objects.create(
                title="–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å",
                title_kg="–ú–∞—Ç–µ—Ä–∏–∞–ª–¥—ã–∫ –∂–∞—Ä–¥–∞–º",
                title_en="Financial Assistance",
                description="–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —Å–ª–æ–∂–Ω—ã—Ö –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö",
                description_kg="–¢–∞—Ç–∞–∞–ª –∂–∞—à–æ–æ –∫—ã—Ä–¥–∞–∞–ª–¥–∞—Ä—ã–Ω–¥–∞ –∫–∞—Ä–∂—ã–ª—ã–∫ –∫–æ–ª–¥–æ–æ",
                description_en="Financial support in difficult life situations",
                icon="üí∞",
                order=2
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Trade Union benefits'))

        # Trade Union Events
        if TradeUnionEvent.objects.count() == 0:
            TradeUnionEvent.objects.create(
                title="–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å",
                title_kg="–°–ø–æ—Ä—Ç—Ç—É–∫ –∫“Ø–Ω",
                title_en="Sports Day",
                description="–ï–∂–µ–≥–æ–¥–Ω–æ–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                description_kg="–ö—ã–∑–º–∞—Ç–∫–µ—Ä–ª–µ—Ä “Ø—á“Ø–Ω –∂—ã–ª —Å–∞–π—ã–Ω–∫—ã —Å–ø–æ—Ä—Ç—Ç—É–∫ –∏—à-—á–∞—Ä–∞",
                description_en="Annual sports event for employees",
                date="15 –∏—é–Ω—è 2025",
                date_kg="2025-–∂—ã–ª–¥—ã–Ω 15-–∏—é–Ω—É–Ω–¥–∞",
                date_en="June 15, 2025",
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Trade Union events'))

        # Trade Union Stats
        if TradeUnionStats.objects.count() == 0:
            TradeUnionStats.objects.create(
                label="–ß–ª–µ–Ω–æ–≤ –ø—Ä–æ—Ñ—Å–æ—é–∑–∞",
                label_kg="–ü—Ä–æ—Ñ—Å–æ—é–∑ –º“Ø—á”©–ª”©—Ä“Ø",
                label_en="Union Members",
                value=150,
                icon="üë•",
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Trade Union statistics'))

        # Commissions
        if Commission.objects.count() == 0:
            Commission.objects.create(
                name="–£—á–µ–±–Ω–æ-–º–µ—Ç–æ–¥–∏—á–µ—Å–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è",
                name_kg="–û–∫—É—É-–º–µ—Ç–æ–¥–∏–∫–∞–ª—ã–∫ –∫–æ–º–∏—Å—Å–∏—è",
                name_en="Academic and Methodological Commission",
                category="methodical",
                description="–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–µ–±–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º",
                description_kg="–û–∫—É—É –ø—Ä–æ–≥—Ä–∞–º–º–∞–ª–∞—Ä—ã–Ω –∏—à—Ç–µ–ø —á—ã–≥—É—É –∂–∞–Ω–∞ –±–µ–∫–∏—Ç“Ø“Ø",
                description_en="Development and approval of educational programs",
                chairman="–î–æ—Ü–µ–Ω—Ç –°–º–∏—Ä–Ω–æ–≤–∞ –ê.–ü.",
                chairman_kg="–î–æ—Ü–µ–Ω—Ç –°–º–∏—Ä–Ω–æ–≤–∞ –ê.–ü.",
                chairman_en="Associate Professor Smirnova A.P.",
                members=["–ò–≤–∞–Ω–æ–≤ –ò.–ò.", "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", "–°–∏–¥–æ—Ä–æ–≤–∞ –°.–°."],
                members_kg=["–ò–≤–∞–Ω–æ–≤ –ò.–ò.", "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", "–°–∏–¥–æ—Ä–æ–≤–∞ –°.–°."],
                members_en=["Ivanov I.I.", "Petrov P.P.", "Sidorova S.S."],
                responsibilities=["–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —É—á–µ–±–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤", "–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ"],
                responsibilities_kg=["–û–∫—É—É –ø–ª–∞–Ω–¥–∞—Ä—ã–Ω –∏—à—Ç–µ–ø —á—ã–≥—É—É", "–ú–µ—Ç–æ–¥–∏–∫–∞–ª—ã–∫ –∫–∞–º—Å—ã–∑–¥–æ–æ"],
                responsibilities_en=["Development of curricula", "Methodological support"],
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Commissions'))

        # Administrative Departments
        if AdministrativeDepartment.objects.count() == 0:
            AdministrativeDepartment.objects.create(
                name="–†–µ–∫—Ç–æ—Ä–∞—Ç",
                name_kg="–†–µ–∫—Ç–æ—Ä–∞—Ç",
                name_en="Rectorate",
                head="–†–µ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤ –ò.–ò.",
                head_kg="–†–µ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤ –ò.–ò.",
                head_en="Rector Ivanov I.I.",
                responsibilities=["–û–±—â–µ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"],
                responsibilities_kg=["–ñ–∞–ª–ø—ã –∂–µ—Ç–µ–∫—á–∏–ª–∏–∫", "–°—Ç—Ä–∞—Ç–µ–≥–∏—è–ª—ã–∫ –ø–ª–∞–Ω–¥–æ–æ"],
                responsibilities_en=["General management", "Strategic planning"],
                email="rector@academy.edu.kg",
                phone="+996 312 111111",
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Administrative Departments'))

        # Administrative Units
        if AdministrativeUnit.objects.count() == 0:
            AdministrativeUnit.objects.create(
                name="–£—á–µ–±–Ω—ã–π –æ—Ç–¥–µ–ª",
                name_kg="–û–∫—É—É –±”©–ª“Ø–º“Ø",
                name_en="Academic Department",
                description="–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞",
                description_kg="–û–∫—É—É –ø—Ä–æ—Ü–µ—Å—Å–∏–Ω —É—é—à—Ç—É—Ä—É—É –∂–∞–Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è–ª–æ–æ",
                description_en="Organization and coordination of the educational process",
                head="–ù–∞—á–∞–ª—å–Ω–∏–∫ –ü–µ—Ç—Ä–æ–≤ –ü.–ü.",
                head_kg="–ë–∞—à—á—ã –ü–µ—Ç—Ä–æ–≤ –ü.–ü.",
                head_en="Head Petrov P.P.",
                responsibilities=["–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", "–ö–æ–Ω—Ç—Ä–æ–ª—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏"],
                responsibilities_kg=["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç“Ø–∑“Ø“Ø", "“Æ–ª–≥“Ø–ª“Ø–∫—Ç“Ø –∫”©–∑”©–º”©–ª–¥”©”©"],
                responsibilities_en=["Schedule compilation", "Performance monitoring"],
                email="academic@academy.edu.kg",
                phone="+996 312 222222",
                location="–ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å, –∫–∞–±. 201",
                location_kg="–ë–∞—à–∫—ã –∫–æ—Ä–ø—É—Å, –∫–∞–±. 201",
                location_en="Main building, room 201",
                staff="15 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
                staff_kg="15 –∫—ã–∑–º–∞—Ç–∫–µ—Ä",
                staff_en="15 employees",
                order=1
            )
            self.stdout.write(self.style.SUCCESS('‚úì Created Administrative Units'))

        self.stdout.write(self.style.SUCCESS('\n‚úÖ Sample data creation completed!'))
